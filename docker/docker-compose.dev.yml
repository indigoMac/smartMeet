version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: smartmeet_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: smartmeet
      POSTGRES_PASSWORD: password
      POSTGRES_DB: smartmeet_dev
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - smartmeet_dev

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: smartmeet_pgadmin_dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@smartmeet.dev
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - smartmeet_dev

  # Redis for caching (optional, for session storage and rate limiting)
  redis:
    image: redis:7-alpine
    container_name: smartmeet_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smartmeet_dev

  # FastAPI Backend (optional - can run locally too)
  api:
    build:
      context: ../apps/api-backend
      dockerfile: Dockerfile.dev
    container_name: smartmeet_api_dev
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://smartmeet:password@postgres:5432/smartmeet_dev
      - REDIS_URL=redis://redis:6379
      - DEBUG=true
    ports:
      - "8000:8000"
    volumes:
      - ../apps/api-backend:/app
      - /app/__pycache__
    depends_on:
      - postgres
      - redis
    networks:
      - smartmeet_dev
    profiles:
      - full # Only start with `docker-compose --profile full up`

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  smartmeet_dev:
    driver: bridge
